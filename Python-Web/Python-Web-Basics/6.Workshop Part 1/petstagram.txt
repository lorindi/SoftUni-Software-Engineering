git init
git status
git log
git reset --hard


За да можем да получаваме стилове при: 
DEBUG = False

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
]
Трябва да изпълним командата: <<python manage.py runserver --insecure>>




slug - съдържа само букви, цифри, долни черти и тирета
Create a new Django project - 'petstagram'.

Creating applications - 'accounts'; 'common'; 'pets'; 'photos'
Open PyCharm Terminal in manage.py, writing command - <<<python manage.py startapp application-name>>>
or 'Ctrl' + 'Alt' + 'R' -> <<<startapp application-name>>>

In each application we create a new file 'urls.py' -> urlpatterns = []/()


Register the new application in settings.py -> INSTALLED_APPS = ['petstagram.photos','petstagram.pets', 'petstagram.accounts','petstagram.common']


In the main URL -> urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('petstagram.common.urls')),
    path('accounts/', include('petstagram.accounts.urls')),
    path('pets/', include('petstagram.pets.urls')),
    path('photos/', include('petstagram.photos.urls')),
]


I load at manage.py and master project level, the resources given to us: 'resources-part-1'

In templates, create new folders with the names of the new apps: 'accounts'; 'common'; 'pets'; 'photos' and I put htmls in them and deleted folder named templates form 'resources-part-1'.



In each application,i create views.py:

accounts/views ->
from django.shortcuts import render
def login_user(request, pk):
    return render(request, 'accounts/login-page.html')
def register_user(request, pk):
    return render(request, 'accounts/register-page.html')
def delete_user(request, pk):
    return render(request, 'accounts/profile-delete-page.html')
def details_user(request, pk):
    return render(request, 'accounts/profile-details-page.html')
def edit_user(request, pk):
    return render(request, 'accounts/profile-edit-page.html')
 
from django.contrib.auth import login
from django.urls import path, include

from petstagram.accounts.views import login_user, register_user, details_user, edit_user, delete_user

accounts/urls ->
urlpatterns = [
    path('login/', login_user, name='login user'),
    path('register/', register_user, name='register user'),
    path('profile/<int:pk>/', include([
        path('', details_user, name='details user'),
        path('edit/', edit_user, name='edit user'),
        path('delete/', delete_user, name='deletes user'),
    ])),





common/views ->
from django.shortcuts import render
def index(request):
    return render(request, 'common/home-page.html')

common/urls ->
from django.urls import path
from petstagram.common.views import index
urlpatterns = [
    path('', index, name='index'),
]





pets/views ->
from django.shortcuts import render
def add_pet(request):
    return render(request, 'pets/pet-add-page.html')
def delete_pet(request, username, pet_name):
    return render(request, 'pets/pet-delete-page.html')
def details_pet(request, username, pet_name):
    return render(request, 'pets/pet-details-page.html')
def edit_pet(request, username, pet_name):
    return render(request, 'pets/pet-edit-page.html')

pets/urls ->from django.urls import path, include
from petstagram.pets.views import add_pet, details_pet, edit_pet, delete_pet
urlpatterns = [
    path('add/', add_pet, name='add pet'),
    path('<str:username>/pet/<slug:pet_name>/', include([
        path('', details_pet, name='details pet'),
        path('edit/', edit_pet, name='edit pet'),
        path('delete/', delete_pet, name='delete pet'),

    ]))
]





photos/views ->
from django.shortcuts import render
def add_photo(request):
    return render(request, 'photos/photo-add-page.html')
def details_photo(request, pk):
    return render(request, 'photos/photo-details-page.html')
def edit_photo(request, pk):
    return render(request, 'photos/photo-edit-page.html')

photos/urls ->
from django.urls import path, include
from petstagram.photos.views import add_photo, details_photo, edit_photo
urlpatterns = [
    path('add/', add_photo, name='add photo'),
    path('<int:pk>/', include([
        path('', details_photo, name='details photo'),
        path('edit/', edit_photo, name='edit photo'),
    ]))
]




Create a new folder named base.py and create a Python file called base.html inside it. In base.html we put the master html and delete the main html from all other html documents leaving only the <main> and write
{% extends 'base/base.html' %}
{% block page_content %}
{% endblock %}
extends - a command that inherits from base.html


{% static 'way to something' %} and {% load static %}

Create a folder named 'partials' and inside it nav.html, copy <nav> from base.html and paste into nav.html, delete <nav> from base.html




