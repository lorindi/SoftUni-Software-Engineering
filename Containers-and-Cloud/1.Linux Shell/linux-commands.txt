https://labs.play-with-docker.com/

#Display the Current User
"whoami" е команда в командния ред (shell) на операционната система, която се използва за да бъде показвано текущият потребител, 
който е влязъл в системата. Когато изпълните "whoami", системата ще върне потребителското име на текущия потребител.
$ whoami
user_name



#Check Linux System Info
uname -a е команда в командния ред (shell) на Unix-подобни операционни системи, включително Linux. Когато се изпълни, тя показва информация за ядрото на операционната система и други системни атрибути.
Примерен изход може да изглежда така:

$ uname -a
Linux myhostname 5.4.0-65-generic #73-Ubuntu SMP Mon Jan 18 17:25:17 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux
Тук:

"Linux" е операционната система.
"myhostname" е името на хоста.
"5.4.0-65-generic" е версията на ядрото.
"#73-Ubuntu SMP Mon Jan 18 17:25:17 UTC 2021" са допълнителни данни за версията на ядрото.
"x86_64 x86_64 x86_64" указва, че системата е 64-битова.
"GNU/Linux" показва, че операционната система използва GNU инструменти и ядрото Linux.




Командата top в Linux се използва, за да покаже в реално време информация за текущите процеси в системата. Тази команда предоставя списък с процесите, 
сортирани по различни критерии, като използвана памет, CPU време и други.
Просто отворете терминал и изпълнете top командата. По подразбиране, процесите се сортират по CPU употреба. За да излезете от изгледа, натиснете 
клавишите q.
Примерен изход от top може да изглежда по следния начин:
top - 10:45:25 up 2 days,  1:44,  1 user,  load average: 0.23, 0.40, 0.52
Tasks: 236 total,   1 running, 235 sleeping,   0 stopped,   0 zombie
%Cpu(s):  5.8 us,  2.0 sy,  0.0 ni, 91.8 id,  0.2 wa,  0.0 hi,  0.2 si,  0.0 st
MiB Mem :   3921.6 total,    394.2 free,   2351.9 used,   1175.5 buff/cache
MiB Swap:   2047.0 total,   1768.2 free,    278.8 used.   1178.8 avail Mem 

  PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
 1457 user      20   0 1496688 128552  54620 S   8.0   3.2   1:23.53 gnome-shell
 1176 root      20   0  573240  91436  71788 S   5.3   2.3   0:50.24 Xorg
 2194 user      20   0 1061044  93440  74172 S   4.7   2.4   0:28.41 gnome-terminal-
 2306 user      20   0  843656  49840  39716 S   2.7   1.3   0:14.09 gnome-software




Командата top -n 5 -d 5 използва top, за да покаже информация за текущите процеси, но с определена периодичност. В този случай, -n 5 означава,
 че top ще изпълни пет итерации (показвания на информация) и след това ще приключи, а -d 5 задава интервал от 5 секунди между всяка итерация.

Това е полезно, ако искате да видите активността на процесите през интервали, а не да следите информацията в реално време.

Пример:

top -n 5 -d 5

Този изход ще ви покаже информация за текущите процеси, обновявайки я на всеки 5 секунди и ще направи това за общо 5 итерации. Можете да 
натиснете клавиша q, за да излезете от top по-рано, ако искате.



Командата clear в терминала се използва, за да изчисти екрана и да направи командния ред чист и видим за по-лесно взаимодействие с потребителя. 
Просто въведете "clear" в терминала и натиснете Enter.



В Linux, файловата система организира и структурира файловете и директориите във виртуалното пространство. Ето някои основни понятия и команди за работа с файловата система:
Структура на Файловата Система:
Коренов Директории ("/"): Това е най-горната директория във файловата система.
Директории ("папки"): Служат за организиране на файловете. Те могат да съдържат други директории и файлове.
Файлове: Записи с данни. Могат да бъдат текстови, изображения, изпълними програми и т.н.
Основни Команди за Работа с Файловата Система:

ls: Показва списък със съдържанието на текущата директория.

ls
pwd: Показва текущата работна директория (пълен път).

pwd
cd: Променя текущата директория.

cd /път/към/директория
mkdir: Създава нова директория.

mkdir нова_директория
touch: Създава нов файл (празен).

touch нов_файл
cp: Копира файл или директория.

cp източник destination
mv: Премества или преименува файл или директория.

mv източник destination
rm: Изтрива файл или директория.

rm файл
rmdir: Изтрива празна директория.

rmdir директория
Примери:

Създаване на нова директория и файл:

mkdir нова_директория
touch нов_директория/нов_файл.txt
Показване на съдържанието на директория:

ls нова_директория
Преместване на файл:

mv нов_директория/нов_файл.txt друга_директория/
Това са само базови команди, но Linux предлага още много възможности за работа с файловата система. За допълнителна информация и опции по отношение 
на всяка команда можете да използвате man (например, man ls) за да прочетете ръководствата на командите.





Командата ls -la /etc се използва, за да покаже подробна информация за съдържанието на директорията "/etc" в Linux. В този случай:
ls: Командата за списъкване на файлове.
-la: Опции, където:
-l: Показва дълъг списък с подробна информация за всеки файл или директория.
-a: Показва и скритите файлове и директории, които започват с точка.
Примерен изход може да изглежда така:
$ ls -la /etc
total 132
drwxr-xr-x 146 root root   8192 Jan 20 10:00 .
drwxr-xr-x  26 root root   4096 Jan 20 09:43 ..
-rw-r--r--   1 root root      0 Jan 13  2021 .updated
drwxr-xr-x   2 root root   4096 Jan 20 09:42 acpi
drwxr-xr-x   2 root root   4096 Jan 20 09:42 adduser.conf
drwxr-xr-x   3 root root   4096 Jan 20 09:43 alternatives
...
-rw-r--r--   1 root root 131072 Nov  4  2020 random-seed
drwxr-xr-x   3 root root   4096 Jan 20 09:43 rc0.d
drwxr-xr-x   3 root root   4096 Jan 20 09:43 rc1.d
...




Типове файлове:
Директория (d): Представлява директория.
Регулярен файл (-): Обикновен файл, съдържащ данни (текст, изображения, програмен код и др.).
Символна връзка (l): Посочва към друг файл или директория.
Сокет (s): Използва се за междупроцесно комуникиране.
Извод (p): Използва се във връзка с каналите (pipes).
Блоков устройство (b): Представлява блоково устройство (например, хард диск).
Символно устройство (c): Представлява символно устройство (например, терминал).
Разрешения за Достъп:

Три символа за собственика (първите три): r (четене), w (запис), x (изпълнение).
Три символа за групата (средните три).
Три символа за останалите (последните три).
Пример: -rw-r--r-- означава, че файлът е регулярен и собственикът има права за четене и запис, а групата и останалите имат право само за четене.
Пример от изхода на ls -l:
$ ls -l
drwxr-xr-x 2 user user 4096 Jan 20 10:00 example_directory
-rw-r--r-- 1 user user 1024 Jan 20 09:30 example_file.txt
lrwxrwxrwx 1 user user    5 Jan 20 09:45 symlink -> target




Ако искате да използвате командата cd за да промените текущата работна директория на /etc/ss, можете да напишете следната команда в командния ред:
cd /etc/ss

Ако тази директория съществува, ще промени текущата работна директория на нея. Ако директорията не съществува или нямате достатъчни права за достъп,
 може да видите съобщение за грешка.
Пример със съществуваща директория:
$ cd /etc/ss

Пример със съобщение за грешка:
$ cd /etc/nonexistent
bash: cd: /etc/nonexistent: Няма такъв файл или директория

Моля, обърнете внимание, че Linux файловата система е чувствителна към регистъра, така че /etc/ss и /etc/SS са различни директории. Проверете правописа
 и се уверете, че директорията наистина съществува.





Командата touch в Linux се използва за създаване на празни файлове или обновяване на времето на последна промяна на вече съществуващи файлове.
 Синтаксисът на командата е:


touch [опции] файлове

Някои често използвани опции включват:
-c: Не създава нови файлове, а само обновява времето на последна промяна на вече съществуващи.
-t: Позволява задаване на конкретно време и дата за времето на последна промяна на файловете.

Примери:
Създаване на нов файл:
touch нов_файл.txt

Създаване на няколко нови файлове:
touch файл1.txt файл2.txt файл3.txt

Обновяване на времето на последна промяна на съществуващ файл:
touch -c съществуващ_файл.txt

Задаване на конкретно време и дата за времето на последна промяна:
touch -t 202401220930.30 файл.txt

Тези са само няколко примера за използване на командата touch. Забележете, че ако файлът вече съществува, командата touch просто обновява времето
 на последна промяна, без да го прави празен.





Командата ln -s в Linux създава символична (символна) връзка или "симлинк" (symbolic link). Тази връзка показва към друг файл или директория и 
може да бъде използвана за по-лесен достъп до файлове или за създаване на алтернативни имена.

Синтаксисът на командата е:
ln -s <целеви_файл_или_директория> <символична_връзка>

Примери:

Създаване на символична връзка към файл:
ln -s /път/към/целевия_файл /път/към/символичната_връзка

Създаване на символична връзка към директория:
ln -s /път/към/целевата_директория /път/към/символичната_връзка

Примери с команди:

Създаване на символична връзка към файл:
ln -s /etc/nginx/nginx.conf ~/nginx_conf_link

Това ще създаде символична връзка с име nginx_conf_link в домашната директория, която сочи към /etc/nginx/nginx.conf.

Създаване на символична връзка към директория:
ln -s /usr/bin /home/user/bin_link

Това ще създаде символична връзка с име bin_link в домашната директория, която сочи към цялата директория /usr/bin.

Символичните връзки са полезни за организиране на файлове и директории, като същевременно предоставят лесен начин за достъп до тях.





Командата rm в Linux се използва за изтриване на файлове или директории. Синтаксисът на командата е:
rm [опции] файлове_или_директории

Някои от често използваните опции включват:

-i: Изисква потвърждение преди всяко изтриване.
-r или -R: Рекурсивно изтриване на директории и тяхното съдържание.
Примери:

Изтриване на файл:
rm файл.txt

Изтриване на няколко файлове:
rm файл1.txt файл2.txt

Изтриване на директория и нейното съдържание:
rm -r директория

(ВНИМАНИЕ: Бъдете предпазливи при използване на -r опция, тъй като тя рекурсивно изтрива всички файлове и директории в даден път.)

Изтриване с потвърждение (интерактивно):
rm -i файл.txt

Това ще поиска потвърждение преди изтриването на всеки файл.

Изтриване на директория с потвърждение (интерактивно):
rm -ri директория

Това ще поиска потвърждение преди изтриването на всички файлове и поддиректории в дадената директория.

Моля, бъдете внимателни при използване на командата rm, особено с опция -r, за да избегнете случайно изтриване на важни данни.





Командата ls в Linux се използва за изброяване на съдържанието на текущата директория. Синтаксисът на командата е прост:

ls [опции] [файлове_или_директории]
Някои от често използваните опции включват:
-l: Показва подробен списък с информация за файловете, включително права за достъп, брой на хардлинкове, собственик, група, размер, дата и време на последна промяна и име на файла.
-a: Показва и скритите файлове и директории, които започват с точка.
Примери:
Изброяване на съдържанието на текущата директория:
ls

Показване на подробен списък на съдържанието:
ls -l

Изброяване на всички файлове, включително скритите:
ls -a

Комбиниране на опции:
ls -la

Това ще покаже подробен списък, включително и скритите файлове.

Изброяване на съдържанието на друга директория:
ls /път/към/директория

Това ще покаже съдържанието на директорията, указана в пътя.

Тези са само няколко примера за използване на командата ls. В зависимост от нуждите ви, може да комбинирате различни опции за да видите подходящата информация за файловете и директориите в системата.
ls -li

Командата ls -li в Linux показва подробен списък на съдържанието на текущата директория, като включва инод номера (inode) за всеки файл или директория. Всеки файл или директория в Linux се идентифицира от уникален инод номер, който се поддържа от файловата система.

Ето как изглежда изходът на командата ls -li:

$ ls -li
total 8
1417030 drwxr-xr-x  2 user user 4096 Jan 20 10:00 dir1
1417031 -rw-r--r--  1 user user    0 Jan 20 09:30 file1.txt
1417032 -rw-r--r--  1 user user    0 Jan 20 09:30 file2.txt

Тук:

Първата колона (например, 1417030) е инод номерът на файла или директорията.
Втората колона показва правата за достъп на съответния файл или директория.
Следващите колони предоставят информация за броя на хардлинковете, собственика, групата, размера, дата и часа на последната промяна, и името на файла или директорията.
Този формат от информация може да бъде полезен при уникалната идентификация на файлове и директории във файловата система.





Командата ls -li | sort в Linux използва комбинация от ls -li (което изброява съдържанието на текущата директория с инод номера) и sort (което сортира редовете в изхода).


$ ls -li | sort
total 8
1417030 drwxr-xr-x  2 user user 4096 Jan 20 10:00 dir1
1417031 -rw-r--r--  1 user user    0 Jan 20 09:30 file1.txt
1417032 -rw-r--r--  1 user user    0 Jan 20 09:30 file2.txt

Изходът от командата ls -li се подава към командата sort, която подразбиращо сортира лексикографски по първата колона (инод номера). Така че изходът се сортира по инод номера във възходящ ред.

Ако искате да сортирате в низходящ ред, можете да използвате sort -r:


$ ls -li | sort -r
total 8
1417032 -rw-r--r--  1 user user    0 Jan 20 09:30 file2.txt
1417031 -rw-r--r--  1 user user    0 Jan 20 09:30 file1.txt
1417030 drwxr-xr-x  2 user user 4096 Jan 20 10:00 dir1

Така ще видите същата информация, но сортирана в низходящ ред по инод номера.